import numpy as np

class Reader:

    def __init__(self):
        pass

    # def scale_timestamps(self):
    #     """
    #         This function adds an additional "timestamp" to each trace by assigning differential timestamps based on "timestamp_low".
    #         timestamp_low represents the current state of the low 32 bits of the IWL5300's clock.
    #         Since it wraps around every 72 minutes, the absolute timestamp values are rarely useful without context.
    #         Relative timestamps are typically easier to graph and represent most use cases more effectively.

    #         Parameters:
    #             csi_trace List[dict] -- A list of CSI frame structs as generated by read_bf_file.
    #     """
    #     pass
    #     # time = [x["timestamp_low"] for x in csi_trace]

    #     # timediff = (np.diff(time))*10e-7
    #     # time_stamp = np.cumsum(timediff)

    #     # csi_trace[0]["timestamp"] = 0
    #     # for x in csi_trace[1:]:
    #     #     x["timestamp"] = time_stamp[csi_trace.index(x)-1]

    #     # return csi_trace